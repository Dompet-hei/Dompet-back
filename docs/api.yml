openapi: 3.0.0
info:
  title: API for Bank Account Management
  version: 1.1.0
servers:
  - url: https://BankAPK.com
tags:
  - name: Clients
  - name: Bank
  - name: Account
  - name: Transaction
  - name: Statement
paths:
  /clients:
    get:
      tags:
        - Clients
      operationId: getClients
      responses:
        '200':
          description: Client list
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Client'
        '400':
            $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"
  /clients/{id}:
    get:
      tags:
        - Clients
      operationId: getClientById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Client with specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
            $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"
    post:
      tags:
        - Clients
      operationId: createClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Client created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
            $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"
        
    put:
      tags:
        - Clients
      operationId: updateClientById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Client updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
            $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /banks:
    get:
      tags:
        - Bank
      operationId: getBanks
      responses:
        '200':
          description: List of banks
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Bank'
        '400':
            $ref: "#/components/responses/400"
        '403':
            $ref: "#/components/responses/403"
        '404':
            $ref: "#/components/responses/404"
        '500':
            $ref: "#/components/responses/500"
  /banks/{id}:
      get:
        tags:
          - Bank
        operationId: getBankById
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Bank with specified ID
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bank'
          '400':
            $ref: "#/components/responses/400"
          '403':
            $ref: "#/components/responses/403"
          '404':
            $ref: "#/components/responses/404"
          '500':
            $ref: "#/components/responses/500"
      post:
        tags:
          - Bank
        operationId: createBank
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        responses:
          '200':
            description: Bank created successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bank'
          '400':
            $ref: "#/components/responses/400"
          '403':
            $ref: "#/components/responses/403"
          '404':
            $ref: "#/components/responses/404"
          '500':
            $ref: "#/components/responses/500"
    
  /accounts:
    get:
      operationId: getAccounts
      tags:
        - Account
      responses:
        '200':
          description: List of accounts retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Account'
        '400':
            $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"
  
  /accounts/{id}:
    post:
      operationId: createAccountByID
      tags:
        - Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
            $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

    put:
      tags:
        - Account
      operationId: updateAccount
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Update successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /accounts/{id}/overDraft:
    get:
      summary: get overDraft account
      operationId: getOverDraftAccount
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OverDraft'
      responses:
        '200':
          description: Succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverDraft'
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /accounts/{id}/withdraw:
    post:
      summary: Withdraw money from an account
      operationId: withdrawFromAccount
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdrawal'
      responses:
        '200':
          description: Withdrawal completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        
        '400':
          $ref: "#/components/responses/400"
        '403':
            $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /accounts/{id}/balance:
    get:
      summary: Get balance of an account
      operationId: getAccountBalance
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/account_id'
      responses:
        '200':
          description: Succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '400':
          $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /accounts/{id}/deposit:
    post:
      summary: Deposit money into an account
      operationId: DepositMoney
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deposit'
      responses:
        '200':
          description: Deposit successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: "#/components/responses/400"
        '403':
            $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /accounts/{id}/transfer:
    post:
      summary: Transfer money from an account to another
      operationId: TransferMoney
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          description: Transfer completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '400':
          $ref: "#/components/responses/400"
        '403':
            $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /accounts/{id}/transfer/{id}/transfer_recipient:
    post:
      summary: Transfer money from one account to another
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          description: Transfer completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '400':
          $ref: "#/components/responses/400"
        '403':
            $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /accounts/{id}/transfers/{id}/cancel:
    post:
      summary: Cancel scheduled transfer
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/account_id'
        - in: path
          name: id
          required: true
          schema:
              type: string
      responses:
        '200':
          description: Transfer canceled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTransfer'
        '400':
          $ref: "#/components/responses/400"
        '403':
            $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /accounts/{id}/transactions:
    get:
      summary: Get transaction history of an account
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/account_id'
      responses:
        '200':
          description: Succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionHistory'
        '400':
          $ref: "#/components/responses/400"
        '403':
            $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /transactions:
      get:
        summary: Get list of transactions
        operationId: getTransactions
        tags:
        - Transaction
        responses:
          '200':
            description: List of transactions retrieved successfully
            content:
              application/json:
                schema:
                  type: array
                  items:
                  $ref: '#/components/schemas/Transaction'
          '400':
            $ref: "#/components/responses/400"
          '403':
            $ref: "#/components/responses/403"
          '404':
            $ref: "#/components/responses/404"
          '500':
            $ref: "#/components/responses/500"
  /transaction/{id}:
    get:
      summary: Get transaction by id
      operationId: getTransactionById
      tags:
        - Transaction
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: L'ID de la transaction
      responses:
        '200':
          description: succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          $ref: "#/components/responses/400"
        '403':
            $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"
  
    put:
      tags:
        - Transaction
      summary: update transaction by id
      operationId: updateTransactionById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: update successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"
  
  /statement:
    get:
      tags:
        - Statement
      operationId: getStatement
      responses:
        '200':
          description: Statement list
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Statement'
        '400':
          $ref: "#/components/responses/400"
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

  /statement/{id}:
    get:
      tags:
        - Statement
      operationId: getStatementById
      responses:
        '200':
          description: Statement by Id
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Statement'
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

    post:
      tags:
        - Statement
      operationId: createStatementById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Statement'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
        '403':
          $ref: "#/components/responses/403"
        '404':
          $ref: "#/components/responses/404"
        '500':
          $ref: "#/components/responses/500"

components:
  schemas:
    amount:
      type: number
    category_id:
      type: string
    effective_date:
          type: string
          format: date-time
    record_date:
          type: string
          format: date-time
    operation_type_id:
      type: integer
    status_transfer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Client:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
    Bank:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Account:
      type: object
      properties:
        id:
          type: string
        lastname:
          type: string
        firstname:
          type: string
        birthdate:
          type: string
          format: date
        monthly_net_salary:
          type: number

    Balance:
      type: object
      properties:
        balance:
          type: number

    Deposit:
      type: object
      properties:
        amount:
          type: number
    
    Withdrawal:
      type: object
      properties:
        amount:
          type: number

    Transfer:
      type: object
      properties:
        id:
          type: string
        unique_reference:
          type: string
        scheduled_effective_date:
          type: string
        status_id:
          type: integer
        amount:
          $ref: '#/components/schemas/amount'
        description:
          type: string
        effective_date:
          $ref: '#/components/schemas/effective_date'
        record_date:
          $ref: '#/components/schemas/record_date'
        sender_account_id:
          type: string
        recipient_account:
          type: string
        transaction_id:
          type: string
        status:
          $ref: '#/components/schemas/status_transfer'

    CancelTransfer:
      type: object
      properties:
        transfer_id:
          type: string
        status:
          type: string

    TransactionHistory:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'

    Transaction:
      type: object
      properties:
        id:
          type: string
        account_id:
          type: string
        category_id:
          $ref: '#/components/schemas/category_id'
        effective_date:
          $ref: '#/components/schemas/effective_date'
        record_date:
          $ref: '#/components/schemas/record_date'
        amount:
          $ref: '#/components/schemas/amount'
        description:
          type: string
    
    OverDraft:
      type: object
      properties:
        id:
          type: string
        account_id:
          type: string
        allowed:
          type: boolean
        start_date:
          type: string
          format: date
        interest_day1To7:
          type: string
        interest_after7:
          type: string
        balance:
          type: integer
    
    Statement:
      type: object
      properties:
        id:
          type: string
        account_id:
          type: string
        start_periode:
          type: string
          format: date
        end_periode:
          type: string
          format: date

    Exception:
          type: object
          properties:
            type:
              type: string
            message:
              type: string

    BadRequestException:
          allOf:
            - $ref: '#/components/schemas/Exception'
          example:
            type: BadRequestException
            message: Bad request

    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: NotAuthorizedException
        message: Not authorized

    NotFoundException:
          allOf:
            - $ref: '#/components/schemas/Exception'
          example:
            type: NotFoundException
            message: Not found

    InternalServerException:
        allOf:
          - $ref: '#/components/schemas/Exception'
        example:
          type: InternalServerException
          message: Unexpected error

    status:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    body:
      type: object
    APIresponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/status"
        body:
          $ref: "#/components/schemas/body"
  
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestException'

    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedException'

    '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'

    '500':
      description: Internal server error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'

  parameters:
    account_id:
      in: path
      name: account_id
      required: true
      schema:
        type: string
    transfer_id:
      in: path
      name: transfer_id
      required: true
      schema:
        type: string
